# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        python-version: [3.10]

    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Checkout navocab repo to generate JSON files
      uses: actions/checkout@v3
      with:
        repository: https://github.com/isamplesorg/navocab.git
    - name: Install poetry for navocab
      working-directory: ./navocab
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Cache Poetry virtualenv
      working-directory: ./navocab
      id: cache
      uses: actions/cache@v2
      with:
      path: .venv
      key: venv-${{ runner.os }}-#{{ hashFiles('**/poetry.lock') }}        
    - name:
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Run the vocab scripts
      working-directory: ./navocab
      run: |
        source ./.venv/bin/activate
        vocab uijson mat:materialsvocabulary -e >& ../src/CVJSON/material_hierarchy.json
        vocab uijson sf:sampledfeaturevocabulary -e >& ../src/CVJSON/sampledFeature_hierarchy.json
        vocab uijson spec:specimentypevocabulary -e >& ../src/CVJSON/specimenType_hierarchy.json
      
    - uses: actions/checkout@v2
    - uses: snickerbockers/submodules-init@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm i
    - run: npm run build --if-present
    - run: npm test
    # - name: Deploy
    #   uses: peaceiris/actions-gh-pages@v3
    #   if: ${{ github.ref == 'refs/heads/main' }}
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./dist
    #     cname: find.isample.xyz
